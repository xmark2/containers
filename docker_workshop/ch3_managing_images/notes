mkdir 301_image_layers
cd 301_image_layers/
touch Dockerfile
docker build -t basic-app .
docker history basic-app
docker build -t basic-app .
docker images
docker image inspect a54ff073147b
sudo du -sh /var/lib/docker/overlay2/
docker images -a
docker image prune
docker images -a
docker images
sudo du -sh /var/lib/docker/overlay2/
docker image prune





mkdir 302_increase_build_reduce_layers
cd 302_increase_build_reduce_layers/
touch Dockerfile
docker rmi -f $(docker images -a -q)
docker ps -a
docker images

docker pull hello-world
docker rmi -f $(docker images -a -q)
docker images
docker pull alpine
tar zcvf Dockerfile.tar.gz Dockerfile
time docker build -t basic-app .
docker history basic-app

mkdir base_image
cd base_image/
touch Dockerfile
docker build -t basic-base .
cd ..
time docker build -t basic-app .
docker history basic-app
docker build --cache-from basic-base -t basic-app .
docker run -it basic-app sh
docker ps -a

docker commit 9824ad801d55 basic-app-test
docker history basic-app-test
docker run basic-app-test cat prod_test_data.txt



docker run -it basic-app sh
$ tar -czf basebackup.tar.gz --exclude=backup.tar.gz --exclude=proc --exclude=tmp --exclude=mnt --exclude=dev --exclude=sys /

cat /tmp/basebackup.tar.gz | docker import - mynew-base
docker images mynew-base
docker history mynew-base
docker run mynew-base ls -l /var/www/html/




mkdir 304_scratch
cd 304_scratch/
touch test.c
g++ -o test -static test.c
touch Dockerfile
docker run scratchtest
sudo docker run scratchtest
docker images scratchtest



docker rmi -f $(docker images -a -q)
docker pull busybox
docker images
docker tag 66ba00ad3de8 new_busybox:ver_1
docker tag new_busybox:ver_1 xmark2/busybox:ver_1.1
docker images
mkdir 305_tagging_images
cd 305_tagging_images/
echo "FROM new_busybox" > Dockerfile
echo "FROM new_busybox:ver_1" > Dockerfile
docker build -t built_image:ver_1.1.1 .



mkdir 306_issue_with_latest_tag
cd 306_issue_with_latest_tag/
touch Dockerfile
docker build -t xmark2/test .
docker run xmark2/test
docker tag xmark2/test xmark2/test:version1
docker build -t xmark2/test:version2 .
docker run xmark2/test
docker run xmark2/test:latest
docker run xmark2/test:version2



mkdir 307_automating_tagging
cd 307_automating_tagging/
touch Dockerfile
docker build -t basic-base .
mkdir ver1
cd ver1
touch Dockerfile
docker images
git log -1 --format=%h
git log
docker build -t basic-app:$(git log -1 --format=%h) .

tar zcvf Dockerfile.tar.gz Dockerfile
docker build -t basic-app:$(git log -1 --format=%h) .
docker build -t basic-app --build-arg GIT_COMMIT=$(git log -1 --format=%h) .

docker inspect -f '{{index .ContainerConfig.Labels "git-commit"}}' basic-app
echo "1.0.0" > VERSION
touch build.sh
chmod +x build.sh
./build.sh
cat VERSION
./build.sh
docker images xmark2/basic-app




mkdir 308_transporting_images
cd 308_transporting_images/
touch Dockerfile
docker images
docker save -o /tmp/basic-app.tar xmark2/basic-app:1.0.0
du -sh /tmp/basic-app.tar
docker rmi -f 3e422af741df
docker load -i /tmp/basic-app.tar
docker images xmark2/basic-app



# 309
docker tag basic-app xmark2/basic-app:ver1
docker push xmark2/basic-app:ver1
docker login
docker push xmark2/basic-app:ver1




# 310
cd /etc/
sudo nano hosts

# add the following line
127.0.0.1 dev.docker.local

docker pull registry
docker run -d -p 5000:5000 --restart=always --name registry registry
docker ps
docker tag xmark2/basic-app:ver1 dev.docker.local:5000/basic-app:ver1
docker images
docker image remove dev.docker.local:5000/basic-app:ver1

docker pull dev.docker.local:5000/basic-app:ver1
docker tag xmark2/basic-app:ver1 dev.docker.local:5000/basic-app:ver1
docker push dev.docker.local:5000/basic-app:ver1
docker image remove dev.docker.local:5000/basic-app:ver1

docker pull dev.docker.local:5000/basic-app:ver1
